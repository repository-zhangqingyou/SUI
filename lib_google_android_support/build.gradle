apply plugin: 'com.android.library'
//apply from: '../ProcessR.gradle'
//apply from: '../assembleJar_RToName.gradle'
apply from: '../assembleJar_IncludeR.gradle'
android {
    compileSdkVersion build_versions.target_sdk
    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }


}
/**
 * 初始化json配置
 */
task assemble_InitConfig() {
    doLast {
        println('写入配置json到文件')
    }
    writeJson()
}

/**
 * 写入json到文件
 * @return
 */
String writeJson() {
    def timeStr = new Date().format('yyyyMMdd(HHmmss)')
    String path = "build/json_config"
    String fileName = "/assembleJarConfig.json"
    File fileD = file(path)
    File file2 = file(path + fileName)
    if (!fileD.exists()) {
        fileD.mkdirs()
    }
    if (!file2.isFile()) {
        file2.createNewFile();
    }

    String jsonString = "{\n" +
            "  \"jarName\": \"\",\n" +
            "  \"oldRString\": \"\",\n" +
            "  \"newRString\": \"\",\n" +
            "  \"styleableArryFunction\": \"\",\n" +
            "  \"styleableFunction\": \"\",\n" +
            "  \"styleFunction\": \"\",\n" +
            "  \"idFunction\": \"\",\n" +
            "  \"layoutFunction\": \"\",\n" +
            "  \"mipmapFunction\": \"\",\n" +
            "  \"drawableFunction\": \"\",\n" +
            "  \"stringFunction\": \"\",\n" +
            "  \"colorFunction\": \"\",\n" +
            "  \"animFunction\": \"\",\n" +
            "  \"dimenFunction\": \"\",\n" +
            "  \"attrFunction\": \"\",\n" +
            "  \"boolFunction\": \"\",\n" +
            "  \"integerFunction\": \"\",\n" +
            "  \"interpolatorFunction\": \"\",\n" +
            "  \"rawFunction\": \"\",\n" +
            "  \"xmlFunction\": \"\",\n" +
            "  \"pluralsFunction\": \"\",\n" +
            "  \"animatorFunction\": \"\"\n" +
            "}"
    Object parsedJson = new groovy.json.JsonSlurper().parseText(jsonString)//读取json
    parsedJson.jarName = "r_class_${timeStr}"
    parsedJson.oldRString = "R\\."
    parsedJson.newRString = "com.zqy.google.android.support.R."
    parsedJson.styleableArryFunction ="com.zqy.google.android.StyleaUtils.getStyleableArryId"
    parsedJson.styleableFunction = "com.zqy.google.android.StyleaUtils.getStyleableId"
    parsedJson.styleFunction = "com.zqy.google.android.ResourcesUtil.getStyleId"
    parsedJson.idFunction = "com.zqy.google.android.ResourcesUtil.getId"
    parsedJson.layoutFunction = "com.zqy.google.android.ResourcesUtil.getLayoutId"
    parsedJson.mipmapFunction = "com.zqy.google.android.ResourcesUtil.getMipmap"
    parsedJson.drawableFunction = "com.zqy.google.android.ResourcesUtil.getDrawableId"
    parsedJson.stringFunction = "com.zqy.google.android.ResourcesUtil.getStringId"
    parsedJson.colorFunction = "com.zqy.google.android.ResourcesUtil.getColorId"
    parsedJson.animFunction = "com.zqy.google.android.ResourcesUtil.getAnimId"
    parsedJson.dimenFunction = "com.zqy.google.android.ResourcesUtil.getDimen"
    parsedJson.attrFunction = "com.zqy.google.android.ResourcesUtil.getAttr"
    parsedJson.boolFunction = "com.zqy.google.android.ResourcesUtil.getBool"
    parsedJson.integerFunction = "com.zqy.google.android.ResourcesUtil.getInteger"
    parsedJson.interpolatorFunction = "com.zqy.google.android.ResourcesUtil.getInterpolator"
    parsedJson.rawFunction = "com.zqy.google.android.ResourcesUtil.getRaw"
    parsedJson.xmlFunction = "com.zqy.google.android.ResourcesUtil.getXml"
    parsedJson.pluralsFunction = "com.zqy.google.android.ResourcesUtil.getPlurals"
    parsedJson.animatorFunction = "com.zqy.google.android.ResourcesUtil.getAnimator"

    def jsonOutput = new groovy.json.JsonOutput()//输出json
    file2.write(jsonOutput.toJson(parsedJson), 'utf-8')


}


dependencies {
    api fileTree(dir: "libs", include: ["*.jar"])
//    implementation "androidx.appcompat:appcompat:1.1.0"
//    implementation "androidx.activity:activity:1.1.0"
//    implementation "androidx.loader:loader:1.1.0"
//    implementation "androidx.viewpager2:viewpager2:1.0.0"
}